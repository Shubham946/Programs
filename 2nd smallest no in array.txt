/******************************************************************************

finding 2nd smallest no in array in 1 pass without sorting the array
test ip
10 5 2 4 3 1
1 2 3 4 5
10 1 4 3 2
                           

*******************************************************************************/

#include <stdio.h>

int main()
{
    int i,n,min1,min2;
    printf("Size of array:");
    scanf("%d",&n);
    if(n<2){ printf("invalid\n"); return 0;} //if array contains <2 ele its invalid ip
    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    min1=a[0];
    min2=a[1];
    
    if(n==2){ 
    min1<min2?(printf("case1 %d",min2)):(printf("case2 %d",min1)); //if array contains only 2 ele return smallest ele
    return 0; 
    }
    for(i=2;i<n;i++)       //a[0] and a[1] already assigned to min1 and min2 .starting comarisons from a[2]
    {
        if(a[i]<min1){    // if current ele is < min1: 2 cases possible(if min1 is < min2 it means we have new min ele which is current ele and min1 will become min2 which is 2nd smallest
								       //and case2: if min1 > min2 then min2 is 2nd smallest till now and current ele will replace min1 as smallest ele)
           
            if(min1<min2){ min2=min1; min1=a[i];}
            else min1=a[i];
        }
        else{
        if(a[i]<min2){ min2=a[i];} //if curr ele > min1 comapre it with min2 and if its < min2 it means its 2nd smallest till now hence min2=curr ele
        }
    }
    min1<min2?(printf("2nd smallest %d",min2)):(printf("2nd smallest %d",min1)); //this takes care of the case where min2=a[1] resulting in min2 being 
										//smallest ele among array then min2 will never be replaced and we will never get 2nd smallest 
										//ele in min2 eg.10 1 7 5 6. hence we print 2nd smallest among min1 & min2.
    
    
    return 0;
}